<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MeditSmile2D.View.DictionaryResources"
                    
                    xmlns:PointInterpolation.View="clr-namespace:MeditSmile2D.View"
                    xmlns:ViewModel="clr-namespace:MeditSmile2D.ViewModel"
                    xmlns:AttachedProperty="clr-namesapce:MeditSmile2D.View.AttachedProperties">

    <DataTemplate DataType="{x:Type ViewModel:PointViewModel}">
        
        <!-- DataTemplate.Resource -->
        <DataTemplate.Resources>
            <Storyboard x:Key="OnMouseEnterTeeth">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                               Storyboard.TargetName="dot">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visiable}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseLeaveTeeth">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                               Storyboard.TargetName="dot">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>            
        </DataTemplate.Resources>
        <Grid>
            <Ellipse x:Name="dot" Width="10" Height="10" Fill="Yellow" Visibility="Collapsed"
                     HorizontalAlignment="Left" VerticalAlignment="Top">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="-5" Y="-5"/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse Fill="Firebrick" Width="5" Height="5" RenderTransformOrigin="0.5,0.5"
                     HorizontalAlignment="Left" VerticalAlignment="Top">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="-2.5" Y="-2.5"/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>
        </Grid>

        <!-- DataTemplate.Triggers -->
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard" 
                                 Storyboard="{StaticResource OnMouseLeaveTeeth}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
                                 Storyboard="{StaticResource OnMouseEnterTeeth}"/>
            </EventTrigger>
        </DataTemplate.Triggers>        
    </DataTemplate>

    <Style x:Key="TeethDotStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" 
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Canvas.Left" 
                Value="{Binding X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Canvas.Top" 
                Value="{Binding Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="AttachedProperty:DragInsideCanvasBehavior.DragInsideCanvas"
                Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>    
    
</ResourceDictionary>