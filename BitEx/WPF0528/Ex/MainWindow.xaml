<Window x:Class="Ex.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Ex"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" PreviewKeyDown="SomeKeyPressed">

    <!-- Border : 외부경계선 설정 -->
    <!-- * Padding : 내 자식들을 담을 때 나와의 간격을 줄때 사용 --><!--
    <Border Margin="5" Padding="5" Background="LightBlue" BorderBrush="SteelBlue" 
            BorderThickness="3,5,3,5" CornerRadius="3" VerticalAlignment="Top"> 
    
    --><!-- StackPanel : 창크기를 늘렸다 줄였다 했을 때 버튼크기가 창에 맞춰 같이 변화됨 -->
    <!-- Oridentation => 디폴트는 Vertical. Horizontal 로 설정하면 세로에 대해 기능설정됨 --><!--
    <StackPanel Orientation="Horizontal">
        <Label HorizontalAlignment="Center"> A Button Stack </Label>
        <Button HorizontalAlignment="Left"> Button 1 </Button>
        <Button HorizontalAlignment="Right"> Button 2 </Button>     --><!-- Size의 디폴트는 Button2 글자를 담을 수 있는 정도의 크기 -->
        
        <!-- Margin : 외부와의 여백(사방으로 영향) --><!--
        <Button Margin="10"> Button 3 </Button>                     --><!-- 코드상: cmd.Margin = new Thickness(5); --><!--
        <Button Margin="5,10,5,10"> Button 4 </Button>              --><!-- left, top, right, bottom -->
        
        <!-- MaxWidth, MinWidth : 사용자가 조절할 수 있는 한계 지정 -->
        <!-- 아무리 늘려도, 줄여도 이 한계 이상으로는 조절 안됨 --><!--
        <Button MaxWidth="200" MinWidth="100"> Button 5 </Button>   
    </StackPanel>
    </Border>
 -->

    
    <!-- WrapPanel : 창크기가 작아졌을때 줄바꿈됨 --><!--
    <WrapPanel Margin="3" >
        <Button VerticalAlignment="Top"> Top Button </Button>
        <Button MinHeight="60">Tall Button 2</Button>       --><!-- 60이하로 떨어지면 버튼이 가려짐(크기조정X) --><!--
        <Button VerticalAlignment="Bottom"> Bottom Button </Button>
        <Button> Stretch Button </Button>
        <Button VerticalAlignment="Center"> Centered Button </Button>
    </WrapPanel>-->
    
     
     <!-- DockPanel --><!-- 
    <DockPanel LastChildFill ="true">
         --><!-- Attached Properties: DockPanel의 Dock을 Button이 사용중 --><!-- 
        <Button DockPanel.Dock="Top"> Top Button </Button>
        <Button DockPanel.Dock="Top" HorizontalAlignment="Center"> A Centered Top Button </Button>
        <Button DockPanel.Dock="Top" HorizontalAlignment="Left"> A Left-Aligned Top Button </Button>
        <Button DockPanel.Dock="Bottom"> Bottom Button </Button>
        <Button DockPanel.Dock="Left"> Left Button </Button>
        <Button DockPanel.Dock="Right"> Right Button </Button>
        
         --><!--LastChildFill속성이 True: 남는 공간에 나머지버튼이 위치함--><!-- 
        <Button> Remainig space </Button>
    </DockPanel>-->

    <!-- DockPanel & StackPanel -->
    <!-- 좌표값 지정 없기때문에 창 크기를 줄였다 늘였다해도 같이 변함 --><!--
    <DockPanel LastChildFill="True">
        <StackPanel DockPanel.Dock="Bottom" HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Margin="10,10,2,10" Padding="3"> OK </Button>
            <Button Margin="2,10,10,10" Padding="3"> Cancel </Button>
        </StackPanel>
        <TextBox DockPanel.Dock="Top" Margin="10">This is a test.</TextBox>
    </DockPanel>-->
    
    <!-- ShowGridLines = "True" => 실행시 격자무늬가 표시됨(개발자용) --><!--
    <Grid ShowGridLines="False">
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Button Grid.Row="0" Grid.Column="0">Top Left</Button>
        <Button Grid.Row="0" Grid.Column="1">Middle Left</Button>
        <Button Grid.Row="1" Grid.Column="2">Bottom Right</Button>
        <Button Grid.Row="1" Grid.Column="1">Bottom Middle</Button>
    </Grid>-->


    <!--<Grid ShowGridLines="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBox Margin="10" Grid.Row="0">This is a test.</TextBox>
        <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Margin="10,10,2,10" Padding="3">OK</Button>
            <Button Margin="2,10,10,10" Padding="3">Cancel</Button>
        </StackPanel>
    </Grid>-->


    <!--<Grid ShowGridLines="True">
        --><!--  --><!--
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        
        --><!-- ColumnSpan = "3" => 3개의 컬럼만큼을 차지하게 표시함 --><!--
        <TextBox Margin="10" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            This is a test.
        </TextBox>
        <Button Margin="10,10,2,10" Padding="3" Grid.Row="1" Grid.Column="1">OK</Button>
        <Button Margin="2,10,10,10" Padding="3" Grid.Row="1" Grid.Column="2">Cancel</Button>
    </Grid>-->


    <!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="100"></ColumnDefinition>
            --><!-- 1번째 Column은 컨트롤이 있는게 아니라 GridSpliter 있을 자리 --><!--
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition MinWidth="50"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Button Grid.Row="0" Grid.Column="0" Margin="3">Left</Button>
        <Button Grid.Row="0" Grid.Column="2" Margin="3">Right</Button>
        <Button Grid.Row="1" Grid.Column="0" Margin="3">Left</Button>
        <Button Grid.Row="1" Grid.Column="2" Margin="3">Right</Button>
        
        --><!-- ShowPreview = "true/false" => GridSpliter --><!--
        <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Width="3" VerticalAlignment="Stretch" 
                      HorizontalAlignment="Center" background ="Blue" ShowsPreview="True">            
        </GridSplitter>
    </Grid>-->

    <!--<Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Button Margin="3" Grid.Row="0">Top Left</Button>
            <Button Margin="3" Grid.Row="1">Bottom Left</Button>
        </Grid>

        <GridSplitter Grid.Column="1" 
                  Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center" 
                  ShowsPreview="False"></GridSplitter>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Margin="3">Top Right</Button>
            <Button Grid.Row="2" Margin="3">Bottom Right</Button>

            <GridSplitter Grid.Row="1" 
                  Height="3" VerticalAlignment="Center" 
                  HorizontalAlignment="Stretch" 
                  ShowsPreview="False"></GridSplitter>
        </Grid>
    </Grid>-->

    
    <!-- SharedSizeGroup -->
    <!-- "TextLabel"이란 그룹명으로 서로 다른 Grid에 속해 있는 (0,1)컨트롤과 (1,1)컨트롤이 묶여있음 -->
    <!-- SharedSizeGroup에 의해 서로 다른 Grid속 컨트롤임에도 크기가 같이 변경됨(사이즈 동맹) -->
    <!--<Grid Grid.IsSharedSizeScope="True" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="3" Background="LightYellow" ShowGridLines="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="TextLabel"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            --><!-- 아래 라벨컨트롤의 사이즈가 늘어나면서 "Short" label의 사이즈도 같이 늘어남 --><!--
            <Label Margin="5">A very long bit of textㅇㅍㄴㅍㄴㅍㄴㅍㄴㅍㄴㅍㄴㅍㄴㅍㄴㅍㄴㅇㅍㅇㅍ</Label>
            --><!-- <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="10"></GridSplitter> --><!--
            <Label Grid.Column="1" Margin="5">More text</Label>
            <TextBox Grid.Column="2" Margin="5">A text box</TextBox>
        </Grid>
        <Label Grid.Row="1" >Some text in between the two grids...</Label>
        <Grid Grid.Row="2" Margin="3" Background="LightYellow"  ShowGridLines="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="TextLabel"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Label Margin="5">Short</Label>
            <TextBox Grid.Column="1" Margin="5">A text box</TextBox>
        </Grid>
    </Grid>-->

    <!-- Canvas --><!--
    <Canvas>
        <Button Canvas.Left="10" Canvas.Top="10">(10,10)</Button>
        <Button Canvas.Left="120" Canvas.Top="30">(120,30)</Button>
        <Button Canvas.Left="60" Canvas.Top="80" Width="50" Height="50">(60,80)</Button>
        <Button Canvas.Left="70" Canvas.Top="120" Width="100" Height="50">(70,120)</Button>
    </Canvas>-->


    <!--<Grid Margin="3,3,10,3">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*" MinWidth="50" MaxWidth="800"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Label Grid.Row="0" Grid.Column="0" Margin="3"
             VerticalAlignment="Center">Home:</Label>
        <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Height="Auto"  VerticalAlignment="Center"> </TextBox>
        <Button Grid.Row="0" Grid.Column="2" Margin="3" Padding="2">Browse</Button>

        <Label Grid.Row="1" Grid.Column="0" Margin="3" VerticalAlignment="Center"> Network: </Label>
        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Height="Auto"  VerticalAlignment="Center"> </TextBox>
        <Button Grid.Row="1" Grid.Column="2" Margin="3" Padding="2">Browse</Button>

        <Label Grid.Row="2" Grid.Column="0" Margin="3" VerticalAlignment="Center">Web:</Label>
        <TextBox Grid.Row="2" Grid.Column="1" Margin="3" Height="Auto"  VerticalAlignment="Center"></TextBox>
        <Button Grid.Row="2" Grid.Column="2" Margin="3" Padding="2"> Browse </Button>

        <Label Grid.Row="3" Grid.Column="0" Margin="3" VerticalAlignment="Center">Secondary:</Label>
        <TextBox Grid.Row="3" Grid.Column="1" Margin="3" Height="Auto"  VerticalAlignment="Center"> </TextBox>
        <Button Grid.Row="3" Grid.Column="2" Margin="3" Padding="2"> Browse </Button>
    </Grid>-->

    <!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0" Grid.Column="0">
            <Button Name="cmdPrev" Margin="10,10,10,3">Prev</Button>
            <Button Name="cmdNext" Margin="10,3,10,3">Next</Button>
            <CheckBox Name="chkLongText" Margin="10,10,10,10" Checked="chkLongText_Checked" Unchecked="chkLongText_Unchecked">
                Show Long Text
            </CheckBox> 
            www.it-ebooks.info Chapter 3 ■ Layout90
        </StackPanel>
        <TextBox Grid.Row="0" Grid.Column="1" Margin="0,10,10,10"
TextWrapping="WrapWithOverflow" Grid.RowSpan="2">This is a test that demonstrates
how buttons adapt themselves to fit the content they contain when they aren't
explicitly sized. This behavior makes localization much easier.</TextBox>
        <Button Grid.Row="1" Grid.Column="0" Name="cmdClose"
Margin="10,3,10,10">Close</Button>
    </Grid>-->


    <!--<ScrollViewer>
        <StackPanel>
            <WrapPanel Background="LightSteelBlue" Name="pnlList">
                <CheckBox Margin="5" IsChecked="True">Panel1</CheckBox>
                <CheckBox Margin="5" IsChecked="True">Panel2</CheckBox>
                <CheckBox Margin="5" IsChecked="True">Panel3</CheckBox>
                <CheckBox Margin="5" IsChecked="True">Panel4</CheckBox>
            </WrapPanel>

            <WrapPanel>
                <StackPanel Name="Panel1" >
                    <Border Padding="5" BorderBrush="Yellow" BorderThickness="2">
                        <UniformGrid Rows="2" Columns="2">
                            <Button Margin="10" Padding="10">1</Button>
                            <Button Margin="10" Padding="10">2</Button>
                            <Button Margin="10" Padding="10">3</Button>
                            <Button Margin="10" Padding="10">4</Button>
                        </UniformGrid>
                    </Border>
                </StackPanel>

                <StackPanel Name="Panel2">
                    <Border Padding="15" BorderBrush="Yellow" BorderThickness="2">
                        <TabControl>
                            <TabItem Header="Page1">
                                <Button Padding="100,50,100,50">Tabs</Button>
                            </TabItem>
                            <TabItem Header="Page2">
                            </TabItem>
                        </TabControl>
                    </Border>
                </StackPanel>

                <StackPanel Name="Panel3">
                    <Border Padding="15" BorderBrush="Yellow" BorderThickness="2">
                        <StackPanel>
                            <TextBox MinLines="5" MaxWidth="150" TextWrapping="Wrap">This is a test of a text box that contains wrapped text.</TextBox>
                            <StackPanel Orientation="Horizontal">
                                <Button>OK</Button>
                                <Button>Cancel</Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <StackPanel Name="Panel4">
                    <Border Padding="15" BorderBrush="Yellow" BorderThickness="2">
                        <UniformGrid Rows="2" Columns="2">
                            <Button Margin="10" Padding="10">1</Button>
                            <Button Margin="10" Padding="10">2</Button>
                            <Button Margin="10" Padding="10">3</Button>
                            <Button Margin="10" Padding="10">4</Button>
                        </UniformGrid>
                    </Border>
                </StackPanel>
            </WrapPanel>

        </StackPanel>
    </ScrollViewer>-->
    
    
    
    <!-- BubbledLabelEvent Ex. -->
    <!--<Grid Margin="3" MouseEnter="SomethingClicked">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Label Margin="5" Background="AliceBlue" BorderBrush="Black" BorderThickness="1" MouseEnter="SomethingClicked" HorizontalAlignment="Left" >
            <StackPanel MouseEnter="SomethingClicked" >
                <TextBlock Margin="3" MouseUp="SomethingClicked" > Image and picture label </TextBlock>
                <Image Source="Resources_img/happyface.jpg" Stretch="None" MouseEnter="SomethingClicked" />
                <TextBlock Margin="3" MouseUp="SomethingClicked" > Courtesy of the StackPanel</TextBlock>
            </StackPanel>
        </Label>


        <ListBox Margin="5" Name="lstMessages" Grid.Row="1"></ListBox>
        <CheckBox Margin="5" Grid.Row="2" Name="chkHandle">Handle first event</CheckBox>
        <Button Click="cmdClear_Click" Grid.Row="3" HorizontalAlignment="Right" Margin="5" Padding="3">Clear List</Button>
    </Grid>-->

    <Grid Margin="3" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Label Margin="5" Background="AliceBlue" BorderBrush="Black" BorderThickness="1" HorizontalContentAlignment="Stretch"
           PreviewKeyDown="SomeKeyPressed">
            <StackPanel PreviewKeyDown="SomeKeyPressed">
                <TextBlock Margin="3" HorizontalAlignment="Center" PreviewKeyDown="SomeKeyPressed">
                 Image and text label
                </TextBlock>
                <Image Source="Resources_img/happyface.jpg" Stretch="None" PreviewKeyDown="SomeKeyPressed"/>
                <DockPanel Margin="0,5,0,0" PreviewKeyDown="SomeKeyPressed">
                    <TextBlock Margin="3" PreviewKeyDown="SomeKeyPressed"> Type here: </TextBlock>
                    <TextBox PreviewKeyDown="SomeKeyPressed" KeyDown="SomeKeyPressed"></TextBox>
                </DockPanel>
            </StackPanel>
        </Label>

        <ListBox Margin="5" Name="lstMessages" Grid.Row="1"></ListBox>
        <CheckBox Margin="5" Grid.Row="2" Name="chkHandle">Handle first event</CheckBox>
        <Button Click="cmdClear_Click" Grid.Row="3" HorizontalAlignment="Right" Margin="5" Padding="3">Clear List</Button>
    </Grid>
</Window>
